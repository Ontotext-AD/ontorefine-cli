name: Java CI with Maven

# Controls when the action will be run. Triggers the workflow on push or pull request
# events, but only for the master branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ synchronize, opened ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # TODO: do we need to setup OS matrix to ensure everything is going according to plan

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0  # Shallow clones should be disabled for a better relevance of analysis

    # Setups the Java version which will be used
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Builds the project. The step will perform the following:
    #  - run unit tests
    #  - run checkstyle
    #  - run security scan
    #  - SonarCloud analyze
    - name: Build & validate
      run: mvn -B clean install sonar:sonar
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
